/*Nadopunite zadatak 2 sa proˇslih laboratorijskih vjeˇzbi na naˇcin da se
pritiskom na INT0 sve aktivnosti pauziraju, a pritiskom na INT1 ponovno
pokrenu.*/

.equ LED_PORT = PORTA
.equ LED_DDR = DDRA
.equ BUTT_PORT = PORTB
.equ BUTT_DDR = DDRB
.equ cnt = 10

.def tmp = r16
.def flag = r17
.def mask = r18
.def flag2 = r22
.def stanje = r23

.cseg
        rjmp reset

.org 0x002
        rjmp stani
.org 0x004
        rjmp kreni

reset:
#init stack
        ldi tmp, low(RAMEND)
        out SPL, tmp
        ldi tmp, high(RAMEND)
        out SPH, tmp

#init ledica

        ldi tmp, 0b11111111
        out LED_DDR, tmp
        out LED_PORT, tmp

#inicijalizacija buttona

        ldi tmp, 0b00001111
        out BUTT_PORT, tmp
        ldi tmp, 0x00
        out BUTT_DDR, tmp

#init interruptova

                ldi tmp, (1<<ISC00)|(1<<ISC01)|(1<<ISC10)||(1<<ISC11)
                out MCUCR, tmp
                ldi tmp, (1<<INT0)|(1<<INT1)
                out GICR, tmp
                sei

#set pocetnih vrijednosti
        ldi tmp, 0b11111111
        ldi flag, 0
        ldi mask, 0b00001000
        ldi flag2, 1
                ldi stanje, 0xff

main:

#provjera koji je button stisnut, i vodi na odreden setup za tu aktivnost
                        sbrs stanje, 0 //ne koristi carry pa i running led radi
                                rjmp pauza
                sbis pinb, 0
                                rcall setup_0
                sbis pinb, 1
                                rcall setup_1
                sbis pinb, 2
                                rcall setup_2
                                sbis pinb, 3
                                rcall setup_3

#ovisno o setupu je flag namjesten i vodi na tu aktivnost
                sbrc flag, 0
                        rcall aktivnost_1
                sbrc flag, 1
                        rcall aktivnost_2
                sbrc flag, 2
                        rcall aktivnost_3
                                sbrc flag, 3
                        rcall aktivnost_4


        rcall delay
        out LED_PORT, tmp
                pauza:

rjmp main


#setup za svaku od aktivnosti, digni potreban flag i namjesti tmp ako je potreban
setup_0:
        ldi flag, (1<<0)
        ldi tmp, 0xff
ret
setup_1:
        ldi flag, (1<<1)
        ldi tmp, 0xff
ret
setup_2:
        ldi flag, (1<<2)
        ldi tmp, 0xff
ret

setup_3:
        ldi flag, (1<<3)
                ori tmp, 0b11110111

ret


delay:
        clr r19
        clr r20
        ldi r21, cnt
        delay_loop:
                dec r19
                brne delay_loop
                dec r20
                brne delay_loop
                dec r21
                brne delay_loop
ret

//nevazno,al isto pali gasi vjerovatno
aktivnost_1:
         eor tmp, mask
ret

//trcece 
aktivnost_2:
            rol tmp
            out LED_PORT, tmp
            rcall delay
ret
//running led - ostaju upaljene
aktivnost_3:
                cpi tmp, 0x00
                brne rollaj
        ldi tmp, 0xff
        out LED_PORT, tmp
        rcall delay
        rollaj:
                ror tmp
                clc
                out LED_PORT, tmp
                rcall delay
ret
//pali gasi sestu diodu
aktivnost_4:
        ldi flag, (1<<5)
        eor tmp, mask
ret
//pauza sa prvim
stani:
        ldi stanje, 0x00
reti
//unpause sa drugom tipkom interrupta
kreni:
        ldi stanje, 0xff
reti
