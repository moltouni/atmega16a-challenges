.equ LED_PORT = PORTA
.equ LED_DDR = DDRA

.def tmp = r16
.def cnt = r17
.def addaj = r18
.cseg
        rjmp reset

.org 0x002
        rjmp stani
.org 0x004
        rjmp kreni

reset:
        ldi tmp, low(RAMEND)
        out SPL, tmp
        ldi tmp, high(RAMEND)
        out SPH, tmp

        ldi tmp, 0b11111111
        out LED_DDR, tmp
        out LED_PORT, tmp

                ldi tmp, (1<<ISC00)|(1<<ISC01)|(1<<ISC10)|(1<<ISC11)
                out MCUCR, tmp
                ldi tmp, (1<<INT0)|(1<<INT1)
                out GICR, tmp
                sei

                ldi cnt, 10

main:
        rcall running
        rcall delay
rjmp main


delay:
        clr r19
        clr r20
        mov r21, cnt
        delay_loop:
                dec r19
                brne delay_loop
                dec r20
                brne delay_loop
                dec r21
                brne delay_loop
ret


running:
                        in tmp, porta
            rol tmp
            out LED_PORT, tmp
ret


stani:
        ldi tmp, 0xff
        cpse cnt, tmp
                inc cnt
reti

kreni:
        ldi tmp, 0x01
        cpse cnt, tmp
                dec cnt
reti
